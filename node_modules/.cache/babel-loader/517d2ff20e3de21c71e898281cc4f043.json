{"ast":null,"code":"import _classCallCheck from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\src\\\\ToDoList\\\\components\\\\AddItem\\\\AddItem.js\";\nimport React, { Component } from 'react';\nimport './AddItems.css';\nimport { connect } from 'react-redux';\nimport { GetsData } from './../../actions/tasks';\n\nvar AddItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddItem, _Component);\n\n  function AddItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addItem = function (item) {\n      var items = _this.props.data;\n      var result = items.push(item);\n\n      _this.props.setData(result);\n    };\n\n    _this.handleChange = function (e) {\n      return {\n        name: e.target.value\n      };\n    };\n\n    _this.handleSubmit = function (e) {\n      var input;\n      e.preventDefault();\n\n      _this.addItem({\n        name: input.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(handleSubmit(input.value));\n          input.value = '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(node) {\n          input = node;\n        },\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter Task Name...\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"add\",\n        type: \"submit\",\n        value: \"ADD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddItem;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setData: function setData(data) {\n      return dispatch(GetsData(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItem);","map":{"version":3,"sources":["G:\\ITI\\React\\ReduxLab\\Lab4Test\\Lab 4\\app\\src\\ToDoList\\components\\AddItem\\AddItem.js"],"names":["React","Component","connect","GetsData","AddItem","addItem","item","items","props","data","result","push","setData","handleChange","e","name","target","value","handleSubmit","input","preventDefault","trim","dispatch","node","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAEMC,O;;;;;;;;;;;;;;;;;;UAEFC,O,GAAU,UAACC,IAAD,EAAU;AAChB,UAAMC,KAAK,GAAG,MAAKC,KAAL,CAAWC,IAAzB;AACA,UAAMC,MAAM,GAAGH,KAAK,CAACI,IAAN,CAAWL,IAAX,CAAf;;AACA,YAAKE,KAAL,CAAWI,OAAX,CAAmBF,MAAnB;AACH,K;;UACDG,Y,GAAe,UAACC,CAAD,EAAO;AAClB,aAAO;AAAEC,QAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAP;AAEH,K;;UACDC,Y,GAAe,UAACJ,CAAD,EAAO;AAClB,UAAIK,KAAJ;AACAL,MAAAA,CAAC,CAACM,cAAF;;AACA,YAAKf,OAAL,CAAa;AAAEU,QAAAA,IAAI,EAAEI,KAAK,CAACF;AAAd,OAAb;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,kBAAAH,CAAC,EAAI;AACjBA,UAAAA,CAAC,CAACM,cAAF;;AACA,cAAI,CAACD,KAAK,CAACF,KAAN,CAAYI,IAAZ,EAAL,EAAyB;AACrB;AACH;;AACDC,UAAAA,QAAQ,CAACJ,YAAY,CAACC,KAAK,CAACF,KAAP,CAAb,CAAR;AACAE,UAAAA,KAAK,CAACF,KAAN,GAAc,EAAd;AACH,SAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI;AAAO,QAAA,GAAG,EAAE,aAAAM,IAAI,EAAI;AAAEJ,UAAAA,KAAK,GAAGI,IAAR;AAAc,SAApC;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,EAAE,EAAC,MAArD;AAA4D,QAAA,WAAW,EAAC,oBAAxE;AAA6F,QAAA,QAAQ,EAAE,KAAKV,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,KAAK,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ,CADJ;AAgBH;;;;EAlCiBZ,S;;AAsCtB,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BhB,IAAAA,IAAI,EAAEgB,KAAK,CAAClB;AADkB,GAAL;AAAA,CAA7B;;AAKA,IAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAJ,QAAQ;AAAA,SAAK;AACpCV,IAAAA,OAAO,EAAE,iBAAAH,IAAI;AAAA,aAAIa,QAAQ,CAACnB,QAAQ,CAACM,IAAD,CAAT,CAAZ;AAAA;AADuB,GAAL;AAAA,CAAnC;;AAKA,eAAeP,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddItems.css'\r\nimport { connect } from 'react-redux'\r\nimport { GetsData } from './../../actions/tasks';\r\n\r\nclass AddItem extends Component {\r\n\r\n    addItem = (item) => {\r\n        const items = this.props.data;\r\n        const result = items.push(item);\r\n        this.props.setData(result);\r\n    }\r\n    handleChange = (e) => {\r\n        return { name: e.target.value };\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        let input;\r\n        e.preventDefault();\r\n        this.addItem({ name: input.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault()\r\n                    if (!input.value.trim()) {\r\n                        return\r\n                    }\r\n                    dispatch(handleSubmit(input.value))\r\n                    input.value = ''\r\n                }}>\r\n                    <input ref={node => { input = node }} type=\"text\" id=\"name\" placeholder=\"Enter Task Name...\" onChange={this.handleChange} />\r\n                    <input className=\"add\" type=\"submit\" value=\"ADD\" />\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.items\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setData: data => dispatch(GetsData(data)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItem);\r\n"]},"metadata":{},"sourceType":"module"}