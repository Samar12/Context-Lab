{"ast":null,"code":"import _classCallCheck from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\ContextLab\\\\app\\\\src\\\\ToDoList\\\\components\\\\todoitem\\\\todoItems.js\";\nimport React from 'react';\nimport { MyContext } from './../../../App';\n\nvar ToDodata =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToDodata, _React$Component);\n\n  function ToDodata() {\n    _classCallCheck(this, ToDodata);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToDodata).apply(this, arguments));\n  }\n\n  _createClass(ToDodata, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = value.state.data;\n      var length = data.length;\n      var ListItems = length ? data.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"name \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, item.name), React.createElement(\"span\", {\n          className: \"action icon\",\n          onClick: function onClick() {\n            return value.deleteItem(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"span\", {\n          className: \"action icon\",\n          onClick: function onClick() {\n            return value.DoneItem(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"\\u221A\"));\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"No Tasks to show\");\n      return React.createElement(MyContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, function (value) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"ListItems\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"name title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Task Name\"), React.createElement(\"span\", {\n          className: \"action title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"span\", {\n          className: \"action title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Complete\"), ListItems));\n      });\n    }\n  }]);\n\n  return ToDodata;\n}(React.Component);\n\nToDodata.contextType = MyContext;\nexport default ToDodata;","map":{"version":3,"sources":["G:\\ITI\\React\\ReduxLab\\ContextLab\\app\\src\\ToDoList\\components\\todoitem\\todoItems.js"],"names":["React","MyContext","ToDodata","data","value","state","length","ListItems","map","item","id","name","deleteItem","DoneItem","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;IAGMC,Q;;;;;;;;;;;;;wCACkB,CAEnB;;;6BACQ;AACL,UAAMC,IAAI,GAAGC,KAAK,CAACC,KAAN,CAAYF,IAAzB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,UAAMC,SAAS,GAAGD,MAAM,GACpBH,IAAI,CAACK,GAAL,CAAS,UAAAC,IAAI,EAAI;AACb,eACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBD,IAAI,CAACE,IAA9B,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,OAAO,EAAE;AAAA,mBAAMP,KAAK,CAACQ,UAAN,CAAiBH,IAAI,CAACC,EAAtB,CAAN;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,OAAO,EAAE;AAAA,mBAAMN,KAAK,CAACS,QAAN,CAAeJ,IAAI,CAACC,EAApB,CAAN;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;AAOH,OARD,CADoB,GAWhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXR;AAeA,aACI,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAAN,KAAK;AAAA,eACF,0CACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAIKG,SAJL,CADA,CADE;AAAA,OADV,CADJ;AAiBH;;;;EAvCkBP,KAAK,CAACc,S;;AA2C7BZ,QAAQ,CAACa,WAAT,GAAuBd,SAAvB;AACA,eAAeC,QAAf","sourcesContent":["import React from 'react';\r\nimport { MyContext } from './../../../App'\r\n\r\n\r\nclass ToDodata extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        const data = value.state.data;\r\n        const length = data.length;\r\n        const ListItems = length ? (\r\n            data.map(item => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        <span className=\"name \">{item.name}</span>\r\n                        <span className=\"action icon\" onClick={() => value.deleteItem(item.id)}>&times;</span>\r\n                        <span className=\"action icon\" onClick={() => value.DoneItem(item.id)}>&radic;</span>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n                <p>No Tasks to show</p>\r\n            )\r\n\r\n\r\n        return (\r\n            <MyContext.Consumer>\r\n                {value => (\r\n                    <>\r\n                    <div className=\"ListItems\">\r\n                        <span className=\"name title\">Task Name</span>\r\n                        <span className=\"action title\">Delete</span>\r\n                        <span className=\"action title\">Complete</span>\r\n                        {ListItems}\r\n                    </div>\r\n                    </>\r\n\r\n                )}\r\n            </MyContext.Consumer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nToDodata.contextType = MyContext;\r\nexport default ToDodata;\r\n"]},"metadata":{},"sourceType":"module"}