{"ast":null,"code":"import _objectSpread from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function (state, action) {\n  switch (action.type) {\n    case 'Set-Task-Data':\n      return _objectSpread({}, state, {\n        items: action.data\n      });\n\n    case 'Set-Complete-Data':\n      return _objectSpread({}, state, {\n        isCompleted: !state.isCompleted\n      });\n\n    case 'Set-Complete-List':\n      return state.map(function (item) {\n        return item.id === action.id ? _objectSpread({}, item, {\n          isCompleted: !item.isCompleted\n        }) : item;\n      });\n\n    default:\n      return state;\n  }\n});\nstate.map(function (todo) {\n  return todo.id === action.id ? _objectSpread({}, todo, {\n    completed: !todo.completed\n  }) : todo;\n});","map":{"version":3,"sources":["G:\\ITI\\React\\ReduxLab\\Lab4Test\\Lab 4\\app\\src\\ToDoList\\Reducer.js"],"names":["state","action","type","items","data","isCompleted","map","item","id","todo","completed"],"mappings":";AAAA,gBAAe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAAjC;;AACA,SAAK,mBAAL;AACA,+BAAYJ,KAAZ;AAAmBK,QAAAA,WAAW,EAAE,CAACL,KAAK,CAACK;AAAvC;;AACA,SAAK,mBAAL;AACA,aAAOL,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACO,EAAnB,qBAA4BD,IAA5B;AAAmCF,UAAAA,WAAW,EAAC,CAACE,IAAI,CAACF;AAArD,aAAmEE,IAAvE;AAAA,OAAd,CAAP;;AACF;AACE,aAAOP,KAAP;AARJ;AAUD,CAXH;AAcEA,KAAK,CAACM,GAAN,CAAU,UAAAG,IAAI;AAAA,SACXA,IAAI,CAACD,EAAL,KAAYP,MAAM,CAACO,EAApB,qBACQC,IADR;AACcC,IAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAD/B,OAEID,IAHQ;AAAA,CAAd","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n      case 'Set-Task-Data':\r\n        return { ...state, items: action.data };\r\n        case 'Set-Complete-Data':\r\n        return { ...state, isCompleted: !state.isCompleted };\r\n        case 'Set-Complete-List':\r\n        return state.map(item =>(item.id === action.id ? {...item , isCompleted:!item.isCompleted}: item));\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n\r\n  state.map(todo =>\r\n    (todo.id === action.id) \r\n      ? {...todo, completed: !todo.completed}\r\n      : todo\r\n  )"]},"metadata":{},"sourceType":"module"}