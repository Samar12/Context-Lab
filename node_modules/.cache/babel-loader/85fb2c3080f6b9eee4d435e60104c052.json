{"ast":null,"code":"import _classCallCheck from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\src\\\\ToDoList\\\\components\\\\Completed\\\\list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar CompletedList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CompletedList, _React$PureComponent);\n\n  function CompletedList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CompletedList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CompletedList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.RedoItem = function (id) {\n      var items = _this.props.data.filter(function (item) {\n        if (item.id === id) {\n          item['isDeleted'] = false;\n          return item;\n        } else {\n          return item;\n        }\n      });\n\n      _this.props.setData(items);\n    };\n\n    return _this;\n  }\n\n  _createClass(CompletedList, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      console.log(this.props.data); // debugger\n\n      var CompleteItems = data.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"name \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, item.name), React.createElement(\"span\", {\n          className: \"action2 icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"\\u221A\"), React.createElement(\"span\", {\n          className: \"action2 icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"\\xD7\"));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"completedList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Complete\"), React.createElement(\"span\", {\n        className: \"action2 title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Redo\"), React.createElement(\"span\", {\n        className: \"action2 title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Delete\"), CompleteItems));\n    }\n  }]);\n\n  return CompletedList;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedList);","map":{"version":3,"sources":["G:\\ITI\\React\\ReduxLab\\Lab4Test\\Lab 4\\app\\src\\ToDoList\\components\\Completed\\list.js"],"names":["React","connect","CompletedList","RedoItem","id","items","props","data","filter","item","setData","console","log","CompleteItems","map","name","PureComponent","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IACMC,a;;;;;;;;;;;;;;;;;;UAGFC,Q,GAAW,UAACC,EAAD,EAAQ;AACf,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,UAAAC,IAAI,EAAI;AACvC,YAAGA,IAAI,CAACL,EAAL,KAAYA,EAAf,EAAkB;AACdK,UAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAApB;AACA,iBAAOA,IAAP;AACH,SAHD,MAGK;AACD,iBAAOA,IAAP;AACH;AACJ,OAPW,CAAZ;;AAUA,YAAKH,KAAL,CAAWI,OAAX,CAAmBL,KAAnB;AACH,K;;;;;;;6BAEQ;AAAA,UACGE,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAELI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAvB,EAFK,CAGL;;AACA,UAAMM,aAAa,GACfN,IAAI,CAACO,GAAL,CAAS,UAAAL,IAAI,EAAI;AACT,eACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBK,IAAI,CAACM,IAA9B,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ;AASP,OAVD,CADJ;AAcA,aACI,0CACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIKF,aAJL,CADJ,CADJ;AAaH;;;;EAhDuBb,KAAK,CAACgB,a;;AAoDlC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AAENX,IAAAA,IAAI,EAAGW,KAAK,CAACb;AAFP,GAAP;AAGF,CAJF;;AAOA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK,EAAL;AAAA,CAAnC;;AAKA,eAAenB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nclass CompletedList extends React.PureComponent {\r\n\r\n    \r\n    RedoItem = (id) => {\r\n        let items = this.props.data.filter(item => {\r\n            if(item.id === id){\r\n                item['isDeleted'] = false;\r\n                return item;\r\n            }else{\r\n                return item;\r\n            }    \r\n        }\r\n\r\n        )\r\n        this.props.setData(items);\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        console.log(this.props.data)\r\n        // debugger\r\n        const CompleteItems = (\r\n            data.map(item => {\r\n                    return (\r\n                        <div key={item.id}>\r\n                            <span className=\"name \">{item.name}</span>\r\n                            <span className=\"action2 icon\" >&radic;</span>\r\n                            <span className=\"action2 icon\" >&times;</span>\r\n                           \r\n                        </div>\r\n                    )\r\n               \r\n            })\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <div className=\"completedList\">\r\n                    <span className=\"name title\">Complete</span>\r\n                    <span className=\"action2 title\">Redo</span>\r\n                    <span className=\"action2 title\">Delete</span>\r\n                    {CompleteItems}\r\n                </div>\r\n\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    \r\n     data : state.items\r\n}};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}