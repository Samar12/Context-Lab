{"ast":null,"code":"import _classCallCheck from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\ITI\\\\React\\\\ReduxLab\\\\Lab4Test\\\\Lab 4\\\\app\\\\src\\\\ToDoList\\\\components\\\\todoitem\\\\todoItems.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { GetsData } from './../../actions/tasks';\n\nvar ToDodata =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToDodata, _React$Component);\n\n  function ToDodata() {\n    _classCallCheck(this, ToDodata);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToDodata).apply(this, arguments));\n  }\n\n  _createClass(ToDodata, [{\n    key: \"render\",\n    value: function render() {\n      // debugger\n      var data = this.props.data;\n      var length = data.length;\n      var listItems = length ? data.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"name \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, item.name), React.createElement(\"span\", {\n          className: \"action icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"span\", {\n          className: \"action icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"\\u221A\"));\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"No Tasks to show\");\n      return React.createElement(\"div\", {\n        className: \"listItems\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Task Name\"), React.createElement(\"span\", {\n        className: \"action title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"span\", {\n        className: \"action title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Complete\"), listItems);\n    }\n  }]);\n\n  return ToDodata;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setData: function setData(data) {\n      return dispatch(GetsData(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDodata);","map":{"version":3,"sources":["G:\\ITI\\React\\ReduxLab\\Lab4Test\\Lab 4\\app\\src\\ToDoList\\components\\todoitem\\todoItems.js"],"names":["React","connect","GetsData","ToDodata","data","props","length","listItems","map","item","id","name","Component","mapStateToProps","state","items","mapDispatchToProps","dispatch","setData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAIMC,Q;;;;;;;;;;;;;6BAEO;AACL;AADK,UAEGC,IAFH,GAEW,KAAKC,KAFhB,CAEGD,IAFH;AAGL,UAAME,MAAM,GAAGF,IAAI,CAACE,MAApB;AACA,UAAMC,SAAS,GAAGD,MAAM,GACpBF,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI,EAAI;AACb,eACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBD,IAAI,CAACE,IAA9B,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;AAOH,OARD,CADoB,GAWhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXR;AAaA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAIKJ,SAJL,CADJ;AAQH;;;;EA3BkBP,KAAK,CAACY,S;;AA8B7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BV,IAAAA,IAAI,EAAEU,KAAK,CAACC;AADkB,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCC,IAAAA,OAAO,EAAE,iBAAAd,IAAI;AAAA,aAAIa,QAAQ,CAACf,QAAQ,CAACE,IAAD,CAAT,CAAZ;AAAA;AADuB,GAAL;AAAA,CAAnC;;AAKA,eAAeH,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { GetsData } from './../../actions/tasks';\r\n\r\n\r\n\r\nclass ToDodata extends React.Component {\r\n\r\n    render() {\r\n        // debugger\r\n        const  {data} = this.props;\r\n        const length = data.length;\r\n        const listItems = length ? (\r\n            data.map(item => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        <span className=\"name \">{item.name}</span>\r\n                        <span className=\"action icon\" >&times;</span>\r\n                        <span className=\"action icon\" >&radic;</span>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n                <p>No Tasks to show</p>\r\n            )\r\n        return (\r\n            <div className=\"listItems\">\r\n                <span className=\"name title\">Task Name</span>\r\n                <span className=\"action title\">Delete</span>\r\n                <span className=\"action title\">Complete</span>\r\n                {listItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.items,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setData: data => dispatch(GetsData(data)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDodata);\r\n"]},"metadata":{},"sourceType":"module"}